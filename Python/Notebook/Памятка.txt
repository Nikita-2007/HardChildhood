py -V проверка версии питон

improt sys
print(sys.version) проверка версии питон с кода

python.exe -m pip install --upgrade pip обновление pip

python -m venv venv создать виртуальное пространсвоз
./venv/Scripts/activate акстивация вертуальной среды (должно появится зеленый venv в скобках)
deactivate - отключение вертуальной среды
pip list список подключенных модулей

Get-ExecutionPolicy проверка доступа к скриптам
Set-ExecutionPolicy AllSigned (или RemoteSigned) разрешает работу скриптов

pip install Flask устоновка Flask

py -m pip freeze список подключенных модулей
pip freeze > requirements.txt сохранение модулей в списках
pip freeze -r requirements.txt загрузить модули

создать файл gitignore.txt для Flask python и vscode
создать файл app.py

python app.py старт сервера из терминала

templates папка для шаблонов
static папка для css, js и тд.

pip install flask_sqlalchemy модуль для работы с бд

from flask_sqlalchemy import SQLAchemy подключаем модуль
app.config['SQLACHEMY_DATABASE_URI'] = 'sqlite:///sqlite.db' путь к бд
db = SQLAchemy(app) подключаем бд

#Расписываем таблицы
class User(db.Model):
    id = db.Column(db.Integer, primary_key=True) #id
    name = db.Column(db.String(255), nullable=False) #Имя
    deskripsyon = db.Column(db.Text(), defaut='Not found') #Описание
    date = db.Column(db.Date, defaut=datetime.UTC) #времення метка

переходим в режи PYTHON (>>>)
>>>from app import app, db |создает папку бд
>>>app.app_context().push()
>>>db.create_all()

Выврд данных для примера
{%if data%}
        {%for i in data%}
            <p>{{i.id}}</p>
            <p>{{i.name}}</p>
            <p>{{i.discription}}</p>
            <p>{{i.date}}</p>
        {%endfor%}
    {%else%}
    <p>Данные отсуствуют</p>
    {%endif%}
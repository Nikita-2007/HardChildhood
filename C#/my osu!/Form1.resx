<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAACQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAoAAAARAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA
        ADMCAgJ7CgYLtggFCd4EAgT1AQEB/QMBA/oFAgX3AQAB/gAAAP8EAgT1CAQJ4woFC9AJBAqtAgICfgAA
        AFcAAAAvAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABYEAgR/BQMF7g8IEPI4Hjv4VC1a/2c3bv93QH//f0SI/4FFiv+BRYr/gUWK/4FFiv93QH//bDpz/2E0
        Z/9QK1b/PSBC/CYUKfIPCBDxAwED+QkFCdcHAweZAAAAUAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABBAIEdAUDBfQxGjT2azlz/4FFiv+BRYr/gUWK/4FFiv+BRYr/gUWK/4FFiv+BRYr/gUWK/4FF
        iv+BRYr/gUWK/4FFiv+BRYr/gUWK/4FFiv+BRYr/e0KE/2M1av9GJUv+HxEh8AQCBPkIBQrWAgICdwAA
        ACEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAQHBAeyGQ4a9G88d/+BRYr/gUWK/4FFiv+BRYr/gUWK/4FFiv+BRYr/gUWK/4FF
        iv+BRYr/gUWK/4FFiv+BRYr/gUWK/4FFiv+BRYr/gUWK/4FFiv+BRYr/gUWK/4FFiv+BRYr/gUWK/35E
        h/9gM2b/Mxs29wcECPYIBQjXAwADYwAAAAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcDCJshEiT1fUOG/4FFiv+BRYr/gUWK/4FFiv+BRYr/gUWK/4FF
        iv+BRYr/gUWK/4FFiv+BRYr/gUWK/4FFiv+BRYr/gUWK/4FFiv+BRYr/gUWK/4FFiv+BRYr/gUWK/4FF
        iv+BRYr/gUWK/4FFiv+BRYr/gUWK/4BEif9dMmT/IxMl8gQCBfMFAgWMAAAAEQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMQkFCfR6QYP/gUWK/4FFiv+BRYr/gUWK/4FF
        iv9+Q4f/bTp1/3M9e/+BRYr/gUWK/4FFiv+BRYr/gESJ/yMTJfYPBxDxBQMG9wUDBfgMBg3yGg4c7jMb
        N/dRK1f/dT99/4FFiv+BRYr/gUWK/4FFiv+BRYr/gUWK/4FFiv+BRYr/gUWK/3E8ef8wGjT2BQIF8gQC
        BHgAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQMHl0EjRfuBRYr/gUWK/4FF
        iv+BRYr/cDx4/ycVKvQDAgP6CAQI5wUDBfAOBw/0ZDVr/4FFiv+BRYr/gUWK/zIbNvcFAgWqAAAAEQAA
        ABEAAAAiAAAAQAAAAG4JBAqyBAIF8xMKFPFDI0f8bzx3/4FFiv+BRYr/gUWK/4FFiv+BRYr/gUWK/4FF
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAA8BwMHkwoFCsUHBAjlBwMH4AoGCrkCAgJ4AAAAPQAAAAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAEIHAwebCQUJ2gMC
        A/cAAAD/AAAA/gYDBuwIBAq2AAAARgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEDAANfBwMH5BML
        FfFFJUr9ZDZr/3lBgf+BRYr/gEWJ/3A8eP9PKlX/EwoU8QcEB8EAAAANAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGQcE
        B80YDRnzYjRo/4FFiv+BRYr/gUWK/4FFiv+BRYr/gUWK/4FFiv+BRYr/f0SI/y8ZM/UJBAmyAAAAAAAA
        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
        iv+BRYr/gUWK/4FFiv+BRYr/gUWK/4FFiv+BRYr/gUWK/4FFiv9BIkX8BQIFjgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACBgIGhgcEB/hZL1//gUWK/4FFiv+BRYr/gUWK/4FF
        iv+BRYr/gUWK/4FFiv+BRYr/fEOF/18zZf88IUH6IBEi8Q4HD/IFAwb4AQEB/QQCBPkIBAj2GA0a8jIb
        NvdsOnP/gUWK/4FFiv+BRYr/gUWK/4FFiv+BRYr/gUWK/4FFiv+BRYr/gUWK/4BEif8RCRLyAAAAPwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEkFAwXuMRo193dA
        gP+BRYr/gUWK/4FFiv+BRYr/gUWK/4FFiv+BRYr/gUWK/4FFiv+BRYr/gUWK/4FFiv+BRYr/gUWK/4FF
        iv+BRYr/gUWK/4FFiv+BRYr/gUWK/4FFiv+BRYr/gUWK/4FFiv+BRYr/gUWK/4FFiv+BRYr/gUWK/0sn
        UP0HBAnSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAQBwMImwYDBvZBI0b7d0B//4FFiv+BRYr/gUWK/4FFiv+BRYr/gUWK/4FFiv+BRYr/gUWK/4FF
        iv+BRYr/gUWK/4FFiv+BRYr/gUWK/4FFiv+BRYr/gUWK/4FFiv+BRYr/gUWK/4FFiv+BRYr/gUWK/4FF
        iv9/RIj/RiVL/AUDBe4AAAAjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACYIBQilBAIF9ywYL/ZbMGH/fUOG/4FFiv+BRYr/gUWK/4FF
        iv+BRYr/gUWK/4FFiv+BRYr/gUWK/4FFiv+BRYr/gUWK/4FFiv+BRYr/gUWK/4FFiv+BRYr/gUWK/4FF
        iv+BRYr/fkOH/1YuXP8QCBHzCAQIygAAAB8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFQICAmwJBQrQBAIE+R0P
        H/BAIkX8WzBh/3A8eP+ARYn/gUWK/4FFiv+BRYr/gUWK/4FFiv+BRYr/gUWK/4FFiv+BRYr/gUWK/4FF
        iv+BRYr/f0SI/2U2bP80HDj3BgMH9gkFCc0AAABIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAEAAAAEsEAgSKCgUKxgYDBu0EAgT5FgwX8DAaM/VJJ07/WTBf/2E0Z/9pOHD/bzx3/2Y2
        bf9cMWL/UixY/zwgQPobDx3wBAIE+QgFCOAEAgR+AAAAHwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAPAAAAGgGAwadCwULvwoF
        C88JBQneBwMH6AkFCdgKBQrFCQQKrgICAn8AAABHAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////
        AAD///////8AAP///////wAA//+P////AAD/wAAH//8AAP8AAAB//wAA/AAAAA//AAD4AAAAAf8AAPgA
        AAAAfwAA8AAAAAAfAADwAAAAAB8AAPAGA/AAHwAA8B8D/gAfAADwHwH/wD8AAPAOA//4fwAA8AAD////
        AADwAAP///8AAPgAA////wAA/AAH////AAD+AA////8AAP+AP//3/wAA/////gB/AAD////4AB8AAP//
        //AAHwAA////4AAPAAD////gAA8AAPx//+AYDwAA+B//4HgPAAD4D//gfA8AAPAB/+A4DwAA8AB/4AAP
        AADwAA/wAA8AAPgAAAAADwAA/AAAAAAPAAD/AAAAAB8AAP+AAAAAHwAA/+AAAAA/AAD/+AAAAP8AAP//
        AAAD/wAA///4AB//AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////
        AAA=
</value>
  </data>
</root>